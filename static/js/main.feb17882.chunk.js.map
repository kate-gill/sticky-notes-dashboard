{"version":3,"sources":["Theme.js","Greeting.js","Clock.js","WeatherInfo.js","Weather.js","Filler.js","Notes.js","App.js","serviceWorker.js","index.js"],"names":["Theme","useState","theme","setTheme","useEffect","localTheme","window","localStorage","getItem","setItem","Greeting","day","hour","today","Date","className","getHours","role","aria-label","getDay","getMonth","getDate","String","endsWith","Clock","date","setDate","timer","setInterval","tick","clearInterval","toLocaleTimeString","WeatherInfo","weather","error","humidity","wind","Math","round","temp","desc","src","icon","alt","Weather","newLocation","setNewLocation","setError","JSON","parse","city","setCity","country","setCountry","stringify","query","setQuery","setWeather","APP_KEY","process","a","fetch","response","ok","Error","statusText","json","data","main","speed","console","log","getWeather","locationDisplay","split","onSubmit","e","preventDefault","type","value","placeholder","onChange","target","required","onClick","charAt","toUpperCase","slice","Filler","Notes","notes","setNotes","noteBody","setNoteBody","id","currentNote","setCurrentNote","deleteNote","parentElement","filter","note","map","uuid","length","key","spellCheck","App","toggleTheme","checked","readOnly","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.feb17882.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\n\nconst Theme = () => {\n\n    const [theme, setTheme] = useState('light');\n\n    const toggleTheme = () => {\n\n        if(theme === 'light'){\n            window.localStorage.setItem('theme', 'dark');\n            setTheme('dark'); \n        } else {\n            window.localStorage.setItem('theme', 'light');\n            setTheme('light');\n        }\n    }\n\n    useEffect(() => {\n        const localTheme = window.localStorage.getItem('theme');\n\n        if(localTheme) {\n            setTheme(localTheme);\n        } \n\n    }, [])\n\n    return [theme, toggleTheme]\n}\n\nexport default Theme;\n","import React from 'react';\n\nconst Greeting = ({ theme }) => {\n\n    const today = new Date();\n\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    const ending = (day) => {\n\n        if(day.endsWith('1')) return 'st';\n        if(day.endsWith('2')) return 'nd';\n        if(day.endsWith('3')) return 'rd';\n        else return 'th';\n\n    }\n\n    const greetMe = (hour) => {\n\n        if(hour >= 5 && hour < 12) return (<p className=\"p1\">Good morning! <span role=\"img\" className=\"emoji\" aria-label=\"daySign\">&#127774;</span></p>);\n        if(hour >= 12 && hour < 18) return (<p className=\"p1\">Good afternoon! <span role=\"img\" className=\"emoji\" aria-label=\"daySign\">&#127774;</span></p>);\n        if(hour >= 18 && hour < 23) return (<p className=\"p1\">Good evening! <span role=\"img\" className=\"emoji\" aria-label=\"daySign\">&#10024;</span></p>);\n        else return (<p className=\"p1\">Good night! <span role=\"img\" className=\"emoji\" aria-label=\"daySign\">&#127769;</span></p>);\n        \n    }\n    \n    return(\n        <div>\n            <h2 className=\"greeting\">{greetMe(today.getHours())}</h2>\n            <hr className={theme === 'dark' ? 'hrDark' : 'hrLight'}/>\n            <h3 className=\"greeting2\">Today is {days[today.getDay()]}, {months[today.getMonth()]} {today.getDate() + ending(String(today.getDate()))}</h3>\n        </div>\n    )\n}\n\nexport default Greeting;","import React, {useState, useEffect} from 'react';\n\nconst Clock = () => {\n\n    const[date, setDate] = useState(new Date());\n\n    useEffect(() => {\n\n        const timer = setInterval( () => tick(), 1000)\n\n        return function clear() {\n            clearInterval(timer);\n        }\n\n    });\n\n    const tick = () => {\n        setDate(new Date());\n    }\n\n    return (\n            <div>\n                <h2 className=\"clock\">{date.toLocaleTimeString()}</h2>\n            </div>\n        )\n\n}\n\n\nexport default Clock;","import React from 'react';\n\nconst WeatherInfo = ( {weather, error} ) => {\n    return(\n        <div>\n        {error \n            ? (<h1 className=\"errorMessage\">Sorry, looks like this location is not found...</h1>) \n            : (<div>\n                {weather && <div className=\"weatherDesc\">\n                    <p><i className='iconWeather fas fa-water'></i> Humidity: {weather.humidity}%</p>\n                    <p className=\"weatherInfo\"><i className='iconWeather fas fa-wind'></i> Wind speed: {weather.wind}m/h</p>\n                </div>}\n                {weather && <div className=\"weatherContainer\">\n                    <span className=\"emoji2\">&#127777;</span><p className=\"p2\">Current weather: </p>\n                    <div>\n                        <p className=\"tempP\">{Math.round(weather.temp)}&#8451;</p>\n                    </div>\n                    <div className=\"weatherIcons\">\n                        <p>{weather.desc}</p>\n                        <img className=\"iconWeather\" src={weather.icon} alt=\"icon\"/>\n                    </div>\n                </div>} \n            </div>)}\n        </div>\n    )\n}\n\n\nexport default WeatherInfo;","import React, {useEffect, useState} from 'react';\nimport WeatherInfo from './WeatherInfo'\n\n\nconst Weather = ({theme}) => {\n\n    const[newLocation, setNewLocation] = useState(false)   ;    \n    const[error, setError] = useState(false);\n\n    const[city, setCity] = useState(\n        JSON.parse(localStorage.getItem('city')) || 'London'\n    );\n\n    const[country, setCountry] = useState(\n        JSON.parse(localStorage.getItem('country')) || 'UK'\n    );\n\n    useEffect(() => {\n        localStorage.setItem('city', JSON.stringify(city))\n    }, [city])\n\n    useEffect(() => {\n        localStorage.setItem('country', JSON.stringify(country))\n    }, [country])\n\n\n    const[query, setQuery] = useState(`${city},${country}`)\n    \n    const[weather, setWeather] = useState(\n        {\n            temp: '', \n            desc: '', \n            icon: '',\n            humidity: '',\n            wind: ''\n        }\n    )\n\n    useEffect(() => {\n          \n        const APP_KEY = `${process.env.REACT_APP_API_KEY}`;\n\n        const getWeather = async () => {\n   \n            try {\n                const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&APPID=${APP_KEY}`);\n                if(!response.ok){\n                    setError(true);\n                    throw Error(response.statusText)\n                }\n                const data = await response.json();\n                setError(false);\n                setWeather(\n                    {\n                        temp: data.main.temp, \n                        desc: data.weather[0].main, \n                        icon: `http://openweathermap.org/img/w/${data.weather[0].icon}.png`,\n                        humidity: data.main.humidity,\n                        wind: data.wind.speed\n                    }\n                )\n            } catch (error){\n                console.log(error)\n            }\n\n        }\n\n        getWeather()\n        \n    }, [query]);\n\n\n    const changeLocation = () => {\n        setNewLocation(true);\n    }\n\n    const updateCity = e => {\n        setCity(e.target.value);\n    }\n\n    const updateCountry = e => {\n        setCountry(e.target.value);\n    }\n\n    const getUpdate = e => {\n        e.preventDefault();\n        setQuery(`${city},${country}`);\n        setNewLocation(false);\n    }\n   \n    const locationDisplay = query.split(',');\n        \n    return(\n        <div>\n            <WeatherInfo weather={weather} error={error}/>\n            {/* Form to search for another location */}\n            {newLocation \n                ? (<div className=\"weatherForms\">\n                    <form className=\"form1\" onSubmit={getUpdate}>\n                        <input className={theme === 'dark' ? 'formOneDark' : 'formOneLight'} type=\"text\" value={city} placeholder=\"Enter city/town\" onChange={updateCity} required/>\n                        <input className={theme === 'dark' ? 'formTwoDark' : 'formTwoLight'} type=\"text\" value={country} placeholder=\"Enter country\" onChange={updateCountry} required/>\n                        <button><i className={theme === 'dark' ? 'locationBtn checkBtnDark material-icons' : 'locationBtn checkBtnLight material-icons'}>check</i></button>                        \n                    </form>\n                    <button onClick={() => {setNewLocation(false)}}><i className={theme === 'dark' ? 'locationBtn cancelBtnDark material-icons' : 'locationBtn cancelBtnLight material-icons'}>cancel</i></button>\n                </div>) \n                : (<span className=\"locationHeader\">\n                        <button className={theme === 'dark' ? 'locationBtnDark' : 'locationBtnLight'} onClick={changeLocation}>My location: {`${locationDisplay[0].charAt(0).toUpperCase() + locationDisplay[0].slice(1)}, ${locationDisplay[1].charAt(0).toUpperCase() + locationDisplay[1].slice(1)}`}\n                        <i className=\"locationIcon material-icons\">add_location</i>\n                        </button>\n                </span>) \n            }\n        </div>\n    )\n}\n\nexport default Weather;\n\n\n\n","import React from 'react';\n\nconst Filler = ( {theme} ) => {\n    return(\n        <div className={theme === 'dark' ? 'fillerDark' : 'fillerLight'}>\n            <h1 className=\"p3\">Welcome to Sticky Notes Dashboard!</h1>\n            <h4 className=\"openingInfo\"><i className={theme === 'dark' ? 'yellow far fa-hand-point-left' : 'white far fa-hand-point-left'}></i>Add your first note by clicking on the plus button</h4>\n            <h4 className=\"openingInfo\">Select your location by clicking on \"My location\"<i className={theme === 'dark' ? 'yellow far fa-hand-point-up' : 'white far fa-hand-point-up'}></i></h4>\n            <h4 className=\"openingInfo\">Choose your preferred theme by toggling on/off button <i className={theme === 'dark' ? 'yellow far fa-hand-point-up' : 'white far fa-hand-point-up'}></i></h4>\n        </div>\n    )\n}\n\nexport default Filler;","import React, {useState, useEffect} from 'react';\nimport uuid from \"uuid/v4\";\nimport Filler from './Filler';\n\nconst Notes = ({ theme }) => {\n\n    const[notes, setNotes] = useState(\n        JSON.parse(localStorage.getItem('notes')) || []\n    );\n\n    useEffect(() => {\n        localStorage.setItem('notes', JSON.stringify(notes));\n    }, [notes])\n\n    const [noteBody, setNoteBody] = useState('');\n    const[currentNote, setCurrentNote] = useState({id: null, noteBody: ''});\n\n    const addNote = e => {\n\n        e.preventDefault();\n        setNotes([...notes, {id: uuid(), noteBody: noteBody}]);\n        setNoteBody('');\n\n    }\n\n    const deleteNote = e => {\n\n        const {id} = e.target.parentElement;\n        setNotes(notes.filter(note => note.id !== id));\n\n    }\n   \n\n    useEffect(() => {\n        setNotes(notes.map(note => (note.id === currentNote.id ? currentNote : note)));\n    }, [currentNote])\n   \n\n    return(\n            <div className=\"notesContainer\">\n                {/* Add new note form*/}\n                <div className=\"formContainer\">\n                    <form className={theme === 'dark' ? 'addFormDark' : 'addFormLight'} onSubmit={addNote}>\n                        <button className={theme === 'dark' ? 'formBtnDark' : 'formBtnLight'}>\n                            <i className=\"addIcon material-icons\">add_box</i>\n                        </button>\n                    </form>\n                </div>\n\n                {/* if there are any notes - show them, else show opening/filler container */}\n                {notes.length > 0 \n                    ? (<div className=\"notesBox\"> \n                        {notes && notes.map((note, id) => (\n                        <div key={id} id={note.id} className=\"noteBox\">\n                            <div className=\"contentDiv\">\n                                <textarea spellCheck=\"false\" value={note.noteBody} onChange={(e) => {setCurrentNote({id: note.id, noteBody: e.target.value});}} className=\"content\"></textarea>\n                            </div>\n                            <button className=\"noteBtn\" onClick={deleteNote}>x</button>\n                        </div>\n                        ))}\n                    </div>)  \n                    : (<Filler theme={theme}/>)\n                }\n            </div>\n        )\n}\n\n\nexport default Notes;\n\n\n\n\n\n","import React from 'react';\nimport './App.css';\nimport Theme from './Theme';\nimport Greeting from './Greeting';\nimport Clock from './Clock';\nimport Weather from './Weather';\nimport Notes from './Notes';\n\nconst App = () => {\n\n  const[theme, toggleTheme] = Theme();\n\n  return(\n    <div className={theme === 'dark' ? 'app dark' : 'app light'}>\n      <nav className={theme === 'dark' ? 'navDark' : 'navLight'}>\n        <div className={theme === 'dark' ? 'menuLeftDark' : 'menuLeftLight'}>\n          <Greeting theme={theme}/>\n        </div>\n        <div className={theme === 'dark' ? 'menuCentralDark' : 'menuCentralLight'}>\n          <i className=\"sun large material-icons\">brightness_5</i>\n          <input checked={theme === 'dark' ? true : false} className=\"toggle\" type=\"checkbox\" onClick={toggleTheme} readOnly/>\n          <i className=\"moon large material-icons\">brightness_3</i>\n          <Clock />\n        </div>\n        <div className={theme === 'dark' ? 'weatherAppDark' : 'weatherAppLight'}>\n          <Weather theme={theme}/>\n        </div>\n      </nav>\n      <Notes theme={theme}/>\n      <footer className={theme === 'dark' ? 'footDark' : 'footLight'}>2019 &copy; Sticky Notes Dashboard</footer>\n    </div>\n  )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}